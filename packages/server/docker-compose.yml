version: '3.8'

services:
  app-development:
    build: .
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=development
      - PORT=3000
      - DB_HOST=database
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=ingreedy
      - CORS_ORIGIN=http://localhost:3000
      - LOG_FORMAT=dev
      - RATE_LIMIT_WINDOW=15
      - RATE_LIMIT_MAX=100
      - API_PREFIX=/api
      - API_VERSION=v1
      - JWT_SECRET_KEY=your-secret-key
      - JWT_ACCESS_TOKEN_EXPIRATION=1h
      - JWT_REFRESH_TOKEN_EXPIRATION=7d
      - SALT_ROUNDS=10
    depends_on:
      - database
    profiles:
      - development

  app-staging:
    build: .
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=staging
      - PORT=3000
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT:-5432}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - CORS_ORIGIN=${CORS_ORIGIN}
      - LOG_FORMAT=staging
      - RATE_LIMIT_WINDOW=15
      - RATE_LIMIT_MAX=100
      - API_PREFIX=/api
      - API_VERSION=v1
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_ACCESS_TOKEN_EXPIRATION=1h
      - JWT_REFRESH_TOKEN_EXPIRATION=7d
      - SALT_ROUNDS=10
    profiles:
      - staging

  database:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ingreedy
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    profiles:
      - development

volumes:
  postgres_data:
